/*
 * Copyright (c) 2021 @MangoIV
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// makes it possible to hold backspace

/ {

    behaviors {        
    	hm: homerow_mods {            
   		compatible = "zmk,behavior-hold-tap";            
    		label = "HOMEROW_MODS";            
    		#binding-cells = <2>;            
    		tapping-term-ms = <150>;            
    		quick_tap_ms = <0>;            
    		flavor = "tap-preferred";            
    		bindings = <&kp>, <&kp>;        
    	};    
    };





	keymap {
		compatible = "zmk,keymap";
		
		default {
            label = "Qwerty";
//  _____________________________       _____________________________
// /  Q  |  W  |  F  |  P  |  B  \     /  Y  |  U  |  I  |  O  |  P  \
// |  A  |  S  |  D  |  F  |  G  | ___ |  H  |  J  |  K  |  L  |  ;  |
// |Sft/Z|  X  |  C  |  V  |  B  ||MUT||  N  |  M  |  ,  |  .  |Sft//|
//         \LAlt/Bspc|  Ctl/SPC  /     \  Num/Del  | Sym/Ent /
//          ---------------------       --------------------
			bindings = <
            &kp Q       &kp W   	 &kp F   		&kp P   	  &kp B                       &kp J   	  &kp L   		&kp U       &kp Y   	 &kp SEMI
            &hm LWIN A  &hm RALT R   &hm LSHFT S   	&hm LCTRL T   &kp G                   	  &kp M   	  &hm RCTRL N   &hm RSHFT E &hm RALT I   &hm RWIN O
            &kp Z       &hm LALT X   &kp C   		&kp D   	  &kp V     &kp C_MUTE        &kp K   	  &kp H   		&kp COMMA   &hm LALT DOT &kp FSLH
                        							&lt 3 DEL     &lt 1 RET                   &lt 2 SPACE &kp BSPC
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
		numbers {
            label = "Nummies";
//  _____________________________       _____________________________
// /  1  |  2  |  3  |  4  |  5  \     /  6  |  7  |  8  |  9  |  0  \
// | TAB |BTPRV|BTNXT| VOL-| VOL+| ___ |  <  |  v  |  ^  |  >  |  '  |
// | Sft |BTSL0|BTCLR| MUT |     ||CPS|| HOME| END | PGUP| PGDN| Sft |
//         \  LAlt   |    Ctl    /     \   Trns    |         /
//          ---------------------       --------------------
			bindings = <
            &kp N1      	&kp N2 			&kp N3 			&kp N4 			&kp N5 					&kp N6 		&kp N7 			&kp N8 			&kp N9 			&kp N0
            &hm LWIN EXCL   &hm RALT AT		&hm LSHFT HASH 	&hm LCTRL MINUS	&kp PERCENT 			&kp EQUAL 	&hm RCTRL PLUS 	&hm RSHFT STAR	&hm RALT BSLH 	&hm RWIN RA(RS(SEMI))
            &kp TILDE 		&hm LALT GRAVE 	&kp LBKT 		&kp LPAR		&kp LBRC		&none 	&kp RBRC 	&kp RPAR		&kp RBKT		&hm LALT AMPS	&kp APOS
            												&trans 			&trans 					&trans 		&trans
			>;
			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
		};
		symbols {
            label = "Funks";
//  _____________________________       _____________________________
// / ESC | F1  | F2  | F3  | F4  \     / USB | BLE |     |  =  |  -  \
// |     | F5  | F6  | F7  | F8  | ___ |  [  |  ]  |     |  `  |  \  |
// | Sft | F9  | F10 | F11 | F12 ||   ||     |     |     |     | Sft |
//         \  LAlt   |    Ctl    /     \         | Trns    /
//          ---------------------       --------------------
			bindings = <
            &kp F1 			&kp F2			  &kp F3  		  &kp F4 		&kp F5 				&kp F6 		 &kp F7 		&kp F8  		&kp F9 			&kp F10
            &kp RA(LS(N1)) 	&kp RA(LS(N2)) 	  &kp RA(LS(N3))  &kp RA(N7) 	&kp RA(N6) 			&kp LS(N4) 	 &kp RA(N5) 	&kp AMPS		&kp PIPE 		&kp CARET
            &bt RA(N8) 		&kp RA(LS(EQUAL)) &kp RA(LS(N4))  &none 	    &kp RA(LBKT) &none 	&kp RA(RBKT) &none 			&kp RA(MINUS) 	&none		 	&kp RA(LS(SLASH))
            												  &trans	 	&trans	 			&trans 		 &trans
			>;
			sensor-bindings = <&inc_dec_kp LC(Z) LC(Y)>;
		};
		nav {
            label = "Navi'i";
//  _____________________________       _____________________________
// / 0   |  1  |  2  |  3  | 4   \     /  5  | 6   |  7  |  8  |  9  \
// |  10 | 11  | 12  | 13  | 14  |  25 |  15  | 16  |  17 | 18  | 19  |
// | 20  | 21  | 22  | 23  | 24  ||   ||  26 |  27 |  28 |  29 | 30  |
//          \   31   |    32     /     \     33      | 34    /
//          ---------------------       --------------------
			bindings = <
            &bt BT_CLR 	&kp C_PREV 	&kp UP  	&kp C_NEXT 		&kp C_VOL_UP		&out OUT_USB    &out OUT_BLE  	&none  		&kp F11 	&kp F12
            &bt BT_NXT 	&kp LEFT 	&kp DOWN  	&kp RIGHT 		&kp C_VOL_DN		&none 			&kp HOME 		&kp PG_UP	&kp PG_DN	&kp END
            &bt BT_PRV 	&none 		&kp C_PP 	&none	 		&kp C_MUTE	 &none 	&bootloader		&none 			&none 		&none		&reset
            									&trans 			&trans 				&trans 			&trans
			>;
			sensor-bindings = <&inc_dec_kp LC(Z) LC(Y)>;
		};
	};
};

/ {    
	combos {
	    compatible = "zmk,combos";        
		combo_esc {            
			timeout-ms = <50>;            
			key-positions = <0 1>;            
			bindings = <&kp ESC>;        
		};
		combo_tab {
			timeout-ms = <50>;            
			key-positions = <0 10>;            
			bindings = <&kp TAB>; 
		};
		combo_alt-tab {
			timeout-ms = <50>;            
			key-positions = <12 23>;            
			bindings = <&kp LA(TAB)>; 
		};
		combo_exclamation {
			timeout-ms = <50>;            
			key-positions = <2 3>;            
			bindings = <&kp EXCLAMATION>; 
		};
		combo_quotes {
			timeout-ms = <50>;            
			key-positions = <27 17>;         
			bindings = <&kp DOUBLE_QUOTES>; 
		};  
		combo_apostrophe {
			timeout-ms = <50>;            
			key-positions = <27 18>;            
			bindings = <&kp APOSTROPHE>; 
		}; 
		combo_pause {
			timeout-ms = <50>;            
			key-positions = <22 23>;            
			bindings = <&kp C_PP>; 
		};
		combo_ue {
			timeout-ms = <50>;
			key-positions = <15 16>;
			bindings = <&kp RA(Y)>;
		};
		combo_ae {
			timeout-ms = <50>;
			key-positions = <11 12>;
			bindings = <&kp RA(Q)>;
		};
		combo_oe {
			timeout-ms = <50>;
			key-positions = <16 17>;
			bindings = <&kp RA(P)>;
		};                
	};
};
